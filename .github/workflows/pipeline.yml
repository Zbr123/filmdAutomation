# name: Run Cypress Tests

# on:
#   push:
#     branches:
#       - master

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout the repository
#       uses: actions/checkout@v4

#     - name: Set up Node.js
#       uses: actions/setup-node@v4
#       with:
#         node-version: '18'

#     - name: Install dependencies
#       run: |
#         npm ci

#     - name: Run Cypress tests (Feature files only)
#       run: |
#         npx cypress run --browser chrome --headless --config video=false --env retries=2
#       env:
#         CYPRESS_validEmail: ${{ secrets.CYPRESS_VALID_EMAIL }}
#         CYPRESS_validPassword: ${{ secrets.CYPRESS_VALID_PASSWORD }}

#     - name: Upload screenshots on failure
#       if: failure()
#       uses: actions/upload-artifact@v4
#       with:
#         name: cypress-screenshots
#         path: cypress/screenshots/

#     - name: Display test result
#       run: |
#         if [ $? -eq 0 ]; then echo "Cypress tests passed"; else echo "Cypress tests failed"; exit 1; fi

# name: Run Cypress Tests

# on:
#   push:
#     branches:
#       - master

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout the repository
#       uses: actions/checkout@v4

#     - name: Set up Node.js
#       uses: actions/setup-node@v4
#       with:
#         node-version: '18'

#     - name: Install dependencies
#       run: |
#         npm ci

#     - name: Run Cypress tests (Feature files only)
#       run: |
#         npx cypress run --browser chrome --headless --config video=false --env retries=2
#       env:
#         CYPRESS_validEmail: ${{ secrets.CYPRESS_VALID_EMAIL }}
#         CYPRESS_validPassword: ${{ secrets.CYPRESS_VALID_PASSWORD }}
#         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
#         SLACK_USER_ID: ${{ secrets.SLACK_USER_ID }}

#     - name: Upload screenshots on failure
#       if: failure()
#       uses: actions/upload-artifact@v4
#       with:
#         name: cypress-screenshots
#         path: cypress/screenshots/

#     - name: Display test result
#       run: |
#         if [ $? -eq 0 ]; then echo "Cypress tests passed"; else echo "Cypress tests failed"; exit 1; fi

# reporting code
name: Run Cypress Tests

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        npm ci
        npm install allure-commandline --save-dev

    - name: Run Cypress tests (Feature files only)
      run: |
        npx cypress run --browser chrome --headless --config video=false --env allure=true,retries=2
      env:
        CYPRESS_validEmail: ${{ secrets.CYPRESS_VALID_EMAIL }}
        CYPRESS_validPassword: ${{ secrets.CYPRESS_VALID_PASSWORD }}
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        SLACK_USER_ID: ${{ secrets.SLACK_USER_ID }}

    - name: Verify Allure Results
      if: always()
      run: |
        ls -la allure-results || echo "No allure-results directory found"

    - name: Generate Allure Report
      if: always()
      run: |
        npx allure generate allure-results --clean -o allure-report
      env:
        ALLURE_RESULTS_DIR: allure-results

    - name: Verify Allure Report
      if: always()
      run: |
        ls -la allure-report || echo "No allure-report directory found"

    - name: Upload Allure Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-report/
        retention-days: 7

    - name: Upload screenshots on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: cypress-screenshots
        path: cypress/screenshots/

    - name: Deploy Allure Report to GitHub Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: allure-report

    - name: Display test result
      run: |
        if [ $? -eq 0 ]; then echo "Cypress tests passed"; else echo "Cypress tests failed"; exit 1; fi